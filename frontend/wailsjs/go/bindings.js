// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT
const go = {
  "backend": {
    "App": {
      /**
       * BatchUploadFile
       * @returns {Promise<models.Response>}  - Go Type: *internal.Response
       */
      "BatchUploadFile": () => {
        return window.go.backend.App.BatchUploadFile();
      },
      /**
       * CheckFile
       * @param {string} arg1 - Go Type: string
       * @returns {Promise<Error>}  - Go Type: error
       */
      "CheckFile": (arg1) => {
        return window.go.backend.App.CheckFile(arg1);
      },
      /**
       * CopyFileUrl
       * @param {string} arg1 - Go Type: string
       * @returns {Promise<models.Response>}  - Go Type: *internal.Response
       */
      "CopyFileUrl": (arg1) => {
        return window.go.backend.App.CopyFileUrl(arg1);
      },
      /**
       * DeleteFile
       * @param {string} arg1 - Go Type: string
       * @returns {Promise<models.Response>}  - Go Type: *internal.Response
       */
      "DeleteFile": (arg1) => {
        return window.go.backend.App.DeleteFile(arg1);
      },
      /**
       * GetConfig
       * @returns {Promise<models.Response>}  - Go Type: *internal.Response
       */
      "GetConfig": () => {
        return window.go.backend.App.GetConfig();
      },
      /**
       * GetList
       * @returns {Promise<models.Response>}  - Go Type: *internal.Response
       */
      "GetList": () => {
        return window.go.backend.App.GetList();
      },
      /**
       * Menu
       * @returns {Promise<models.Menu>}  - Go Type: *menu.Menu
       */
      "Menu": () => {
        return window.go.backend.App.Menu();
      },
      /**
       * OnBeforeClose
       * @param {models.Context} arg1 - Go Type: context.Context
       * @returns {Promise<boolean>}  - Go Type: bool
       */
      "OnBeforeClose": (arg1) => {
        return window.go.backend.App.OnBeforeClose(arg1);
      },
      /**
       * SetConfig
       * @param {string} arg1 - Go Type: string
       * @returns {Promise<models.Response>}  - Go Type: *internal.Response
       */
      "SetConfig": (arg1) => {
        return window.go.backend.App.SetConfig(arg1);
      },
      /**
       * SyncDatabase
       * @returns {Promise<void>} 
       */
      "SyncDatabase": () => {
        return window.go.backend.App.SyncDatabase();
      },
      /**
       * UpdateFileName
       * @param {string} arg1 - Go Type: string
       * @param {string} arg2 - Go Type: string
       * @returns {Promise<models.Response>}  - Go Type: *internal.Response
       */
      "UpdateFileName": (arg1, arg2) => {
        return window.go.backend.App.UpdateFileName(arg1, arg2);
      },
      /**
       * Upload
       * @param {string} arg1 - Go Type: string
       * @param {Array<boolean>} arg2 - Go Type: []bool
       * @returns {Promise<string|Error>}  - Go Type: string
       */
      "Upload": (arg1, arg2) => {
        return window.go.backend.App.Upload(arg1, arg2);
      },
    },
  },

};
export default go;
